server.port = 8888

spring.config.name = configserver
spring.application.name = configserver

eureka.client.serviceUrl.defaultZone = ${EUREKA_URI:http://localhost:8761/eureka}
eureka.instance.preferIpAddress = true


###############LOCAL REPOSITORY########################
#spring.cloud.config.server.git.uri = file://${user.home}/dev/config-repo

###############GITHUB REPOSITORY#######################
spring.cloud.config.server.git.uri = https://github.com/omon03/config-repo-pm.git
#spring.cloud.config.server.git.username = my-user-name
#spring.cloud.config.server.git.password = my-password



###################################################################
############### Конфигурация клиентского приложения ###############
# https://soshace.com/centralize-the-configuration-of-services-with-spring-cloud-config/
###################################################################

### bootstrap.properties
#server.port = 8761
#spring.application.name = myconfig-client-app
# адрес сервера с конфигами
#spring.cloud.config.uri = http://localhost:8888
#spring.cloud.config.server.git.clone-on-start = true
#spring.cloud.config.fail-fast = true
#spring.profiles.active = cluster2,instance01

### bootstrap.yml
## Application-wide configuration
#server:
#  port: 8761
#
#spring:
## Name of application, used by config server
#  application:
#    name: myconfig-client-app
## Location of config server
#  cloud:
#    config:
#      uri: http://localhost:8888
#      server:
#        git:
#          clone-on-start: true
## Stop the application if it can't connect to the config server
#      fail-fast: true
